// Mocks generated by Mockito 5.0.15 from annotations
// in equiz/test/modules/auth/domain/usecases/create_account_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:equiz/modules/auth/domain/auth_failures.dart' as _i5;
import 'package:equiz/modules/auth/domain/entities/user_entity.dart' as _i6;
import 'package:equiz/modules/auth/domain/repositories/auth_repository_interface.dart'
    as _i3;
import 'package:equiz/modules/auth/domain/user_params.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [IAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthRepository extends _i1.Mock implements _i3.IAuthRepository {
  MockIAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AuthFailure, _i6.UserEntity>> createAccount(
          _i7.UserParams? params) =>
      (super.noSuchMethod(Invocation.method(#createAccount, [params]),
              returnValue:
                  Future<_i2.Either<_i5.AuthFailure, _i6.UserEntity>>.value(
                      _FakeEither_0<_i5.AuthFailure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.AuthFailure, _i6.UserEntity>>);
  @override
  String toString() => super.toString();
}
